Index: app/src/main/java/co/kr/todayplay/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.kr.todayplay;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.service.notification.NotificationListenerService;\nimport android.util.Log;\nimport android.view.MenuItem;\nimport android.widget.Toast;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.ArrayList;\n\nimport co.kr.todayplay.fragment.CategoryFragment;\nimport co.kr.todayplay.fragment.CommunityFragment;\nimport co.kr.todayplay.fragment.HomeFragment;\nimport co.kr.todayplay.fragment.JournalFragment;\nimport co.kr.todayplay.fragment.ProfileFragment;\nimport co.kr.todayplay.fragment.SearchFragment;\nimport co.kr.todayplay.object.Banner;\nimport co.kr.todayplay.object.Ranking;\nimport co.kr.todayplay.object.Recommend;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private Long mBackwait = 0L;\n    // 선언해서 밑에서 작업할시 이동이 안돼는 현상이 나타나서 밑에 따로 선언해주었습니다.\n    private final CategoryFragment categoryFragment = new CategoryFragment();\n    private final SearchFragment searchFragment = new SearchFragment();\n    private final ProfileFragment profileFragment = new ProfileFragment();\n    private final CommunityFragment communityFragment = new CommunityFragment();\n    private final JournalFragment journalFragment = new JournalFragment();\n\n\n    //상단 배너부분 정보\n    String HomeBanner_all_jsonString;\n    String all_HomeBanner_result_url = \"http://183.111.253.75/request_home_banner_info/\";\n    JSONArray HomeBanner_all_jsonArray;\n    ArrayList<Banner> banners = new ArrayList();\n    Banner data;\n\n    //오늘의 추천 정보\n    String Recommend_all_jsonString;\n    String all_Recommend_result_url =\"http://183.111.253.75/request_todays_recommend/\";\n    JSONArray Recommend_all_jsonArray;\n    ArrayList<Recommend> recommands =new ArrayList();\n    Recommend data1;\n\n    //오늘의 저널 정보\n    String Journal_all_jsonString;\n    String all_Journal_result_url =\"http://183.111.253.75/request_todays_journal/\";\n    JSONArray Journal_all_jsonArray;\n    ArrayList<Recommend> recommandj =new ArrayList();\n    Recommend data2;\n\n    //핫랭크 인기 순위\n    String Ranking_all_jsonString;\n    String all_Ranking_result_url=\"http://183.111.253.75/request_hot_rank/\";\n    JSONArray Ranking_all_jsonArray;\n    ArrayList<Ranking> rankings = new ArrayList<Ranking>();\n    Ranking data3;\n    String userId=null ;\n    int cnt;\n\n\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        Intent intent = getIntent();\n        userId = intent.getStringExtra(\"userId\");\n\n        Log.d(\"userId\",\"userId=\"+userId);\n\n        if(userId !=null){\n            SharedPreference.setAttribute(getApplicationContext(),\"userId\",userId);\n        }\n\n        final HomeFragment homeFragment = new HomeFragment(banners,recommands,recommandj,rankings);\n        //배너정보\n        UpdateBannerInfo updateBannerInfo = new UpdateBannerInfo();\n        updateBannerInfo.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);\n        //추천정보\n        UpdateRecommendInfo updateRecommendInfo =new UpdateRecommendInfo();\n        updateRecommendInfo.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n        //저널정보\n        UpdateJournalInfo updateJournalInfo = new UpdateJournalInfo();\n        updateJournalInfo.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n        //인기작정보\n        UpdateRankingInfo updateRankingInfo = new UpdateRankingInfo();\n        updateRankingInfo.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n\n        BottomNavigationView main_bottomNavigationView = findViewById(R.id.main_bottomNavigationView);\n        main_bottomNavigationView.setSelectedItemId(R.id.bottom_home);\n\n        getSupportFragmentManager().beginTransaction().replace(R.id.main_frameLayout, homeFragment).commitAllowingStateLoss();\n\n\n\n        main_bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\n            @Override\n            public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\n                FragmentTransaction transaction = MainActivity.this.getSupportFragmentManager().beginTransaction();\n                switch (menuItem.getItemId()){\n                    case R.id.bottom_home:\n                        transaction.replace(R.id.main_frameLayout, new HomeFragment(banners,recommands,recommandj,rankings)).commitAllowingStateLoss();\n                        break;\n                    case R.id.bottom_category:\n                        transaction.replace(R.id.main_frameLayout, new CategoryFragment()).commitAllowingStateLoss();\n                        break;\n                    case R.id.bottom_search:\n                        transaction.replace(R.id.main_frameLayout, new SearchFragment()).commitAllowingStateLoss();\n                        break;\n                    case R.id.bottom_community:\n                        transaction.replace(R.id.main_frameLayout, new JournalFragment()).commitAllowingStateLoss();\n                        break;\n                    case R.id.bottom_profile:\n                        transaction.replace(R.id.main_frameLayout, new ProfileFragment()).commitAllowingStateLoss();\n                        break;\n                }\n                return true;\n            }\n        });\n    }\n\n    public void replaceFragment(Fragment fragment) {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n        fragmentTransaction.replace(R.id.main_frameLayout, fragment).commit();\n    }\n\n    @Override\n    public void onBackPressed() {\n//        finish();\n//        if(System.currentTimeMillis() - mBackwait >= 2000){\n//\n//            mBackwait = System.currentTimeMillis();\n//            Toast.makeText(this, \"뒤로가기 버튼을 한번 더 누르시면 종료됩니다.\", Toast.LENGTH_SHORT).show();\n//        }\n        if (System.currentTimeMillis() > mBackwait + 2500) {\n            mBackwait = System.currentTimeMillis();\n            Toast.makeText(this, \"뒤로 가기 버튼을 한 번 더 누르시면 종료됩니다.\", Toast.LENGTH_LONG).show();\n            return;\n        }\n        if (System.currentTimeMillis() <= mBackwait+ 2500) {\n            finish();\n        }\n\n    }\n\n    public static String getJsonFromServer(String url) throws IOException {\n\n        BufferedReader inputStream = null;\n\n        URL jsonUrl = new URL(url);\n        URLConnection dc = jsonUrl.openConnection();\n\n        dc.setConnectTimeout(10000);\n        dc.setReadTimeout(10000);\n\n        inputStream = new BufferedReader(new InputStreamReader(\n                dc.getInputStream()));\n\n        // read the JSON results into a string\n        String jsonResult = inputStream.readLine();\n        return jsonResult;\n    }\n//상단배너\n    public class UpdateBannerInfo extends AsyncTask<Void, Void, Void> {\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n        }\n\n        @Override\n        protected Void doInBackground(Void... voids) {\n            try {\n                HomeBanner_all_jsonString = getJsonFromServer(all_HomeBanner_result_url);\n                Log.d(\"Banner_all_jsonString\", HomeBanner_all_jsonString);\n                JSONObject jsonObject = new JSONObject(HomeBanner_all_jsonString);\n                Log.d(\"HomeBanner jsonObject\", jsonObject.toString());\n                HomeBanner_all_jsonArray = jsonObject.getJSONArray(\"home_banner\");\n                for(int i=0; i<HomeBanner_all_jsonArray.length(); i++){\n                    JSONObject HomeBanner_object = (JSONObject) HomeBanner_all_jsonArray.get(i);\n                    int banner_id = (int) HomeBanner_object.get(\"play_id\");\n                    Log.d(\"HomeBannerObject\", \"Object \" + i + \": \" + HomeBanner_all_jsonArray.get(i).toString());\n                    Log.d(\"banner_id\", \"banner_id = \" + banner_id);\n                    data = new Banner((int)HomeBanner_object.get(\"order\"), banner_id, (String)HomeBanner_object.get(\"banner\"));\n                    banners.add(data);\n\n                    System.out.println(\"in banner\"+banners);\n                }\n                Log.d(\"banner_done?\",\"banner_done\");\n                cnt++;\n\n\n\n//                final HomeFragment homeFragment = new HomeFragment(banners,recommands);\n//                getSupportFragmentManager().beginTransaction().replace(R.id.main_frameLayout, homeFragment).commitAllowingStateLoss();\n\n\n            } catch (JSONException | IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            return null;\n        }\n    }\n//오늘의 추천\n    public class UpdateRecommendInfo extends AsyncTask<Void, Void, Void> {\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n        }\n\n        @Override\n        protected Void doInBackground(Void... voids) {\n            try {\n                Recommend_all_jsonString = getJsonFromServer(all_Recommend_result_url);\n                Log.d(\"Recommend_all_json\", Recommend_all_jsonString);\n                JSONObject jsonObject = new JSONObject(Recommend_all_jsonString);\n                Log.d(\"Recommend jsonObject\", jsonObject.toString());\n                Recommend_all_jsonArray = jsonObject.getJSONArray(\"todays_recommend\");\n                for(int i=0; i<Recommend_all_jsonArray.length(); i++){\n                    JSONObject Recommend_object = (JSONObject) Recommend_all_jsonArray.get(i);\n                    int play_id = (int) Recommend_object.get(\"play_id\");\n                    Log.d(\"RecommendObject\", \"Object \" + i + \": \" + Recommend_all_jsonArray.get(i).toString());\n                    Log.d(\"play_id\", \"play_id = \" + play_id);\n                    data1 = new Recommend(play_id);\n                    recommands.add(data1);\n\n                }\n                Log.d(\"recommend_done?\",\"recommend_done\");\n                cnt++;\n\n\n\n            } catch (JSONException | IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            return null;\n        }\n    }\n// 오늘의 저널\n    public class UpdateJournalInfo extends AsyncTask<Void, Void, Void> {\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n        }\n\n        @Override\n        protected Void doInBackground(Void... voids) {\n            try {\n                Journal_all_jsonString = getJsonFromServer(all_Journal_result_url);\n                Log.d(\"Journal_all_jsonString\", Journal_all_jsonString);\n                JSONObject jsonObject = new JSONObject(Journal_all_jsonString);\n                Log.d(\"Journal jsonObject\", jsonObject.toString());\n                Journal_all_jsonArray = jsonObject.getJSONArray(\"todays_journal\");\n                for(int i=0; i<Journal_all_jsonArray.length(); i++){\n                    JSONObject Journal_object = (JSONObject) Journal_all_jsonArray.get(i);\n                    int journal_id = (int) Journal_object.get(\"journal_id\");\n                    Log.d(\"JournalObject\", \"Object \" + i + \": \" + Journal_all_jsonArray.get(i).toString());\n                    Log.d(\"journal_id\", \"journal_id = \" + journal_id);\n                    data2 = new Recommend(journal_id);\n                    recommandj.add(data2);\n\n                }\n                Log.d(\"journal_done?\",\"journal_done\");\n                cnt++;\n\n\n\n            } catch (JSONException | IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            return null;\n        }\n    }\n//인기작\n    public class UpdateRankingInfo extends AsyncTask<Void, Void, Void> {\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n        }\n\n        @Override\n        protected Void doInBackground(Void... voids) {\n            try {\n                Ranking_all_jsonString = getJsonFromServer(all_Ranking_result_url);\n                Log.d(\"Ranking_all_jsonString\", Ranking_all_jsonString);\n                JSONObject jsonObject = new JSONObject(Ranking_all_jsonString);\n                Log.d(\"Ranking jsonObject\", jsonObject.toString());\n                Ranking_all_jsonArray = jsonObject.getJSONArray(\"hot_rank\");\n                for(int i=0; i<Ranking_all_jsonArray.length(); i++){\n                    JSONObject Ranking_object = (JSONObject) Ranking_all_jsonArray.get(i);\n                    int play_id = (int) Ranking_object.get(\"play_id\");\n                    Log.d(\"Ranking_object\", \"Object \" + i + \": \" + Ranking_all_jsonArray.get(i).toString());\n                    Log.d(\"play_id\", \"play_id = \" + play_id);\n                    data3 = new Ranking((String)Ranking_object.get(\"category\"),(int)Ranking_object.get(\"order\"),play_id);\n                    rankings.add(data3);\n\n                }\n                Log.d(\"ranking_done?\",\"ranking_done\");\n                cnt++;\n\n\n\n            } catch (JSONException | IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            return null;\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/co/kr/todayplay/MainActivity.java	(revision 02eaaa7d2cae36ea127725da4ea1691d2d05007d)
+++ app/src/main/java/co/kr/todayplay/MainActivity.java	(date 1614675285000)
@@ -31,6 +31,7 @@
 import co.kr.todayplay.fragment.CategoryFragment;
 import co.kr.todayplay.fragment.CommunityFragment;
 import co.kr.todayplay.fragment.HomeFragment;
+import co.kr.todayplay.fragment.Journal.JournalDetailFragment;
 import co.kr.todayplay.fragment.JournalFragment;
 import co.kr.todayplay.fragment.ProfileFragment;
 import co.kr.todayplay.fragment.SearchFragment;
@@ -144,6 +145,19 @@
     }
 
     public void replaceFragment(Fragment fragment) {
+        Bundle bundle = new Bundle();
+        bundle.putInt("user_id", Integer.parseInt(userId));
+        fragment.setArguments(bundle);
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
+        fragmentTransaction.replace(R.id.main_frameLayout, fragment).commit();
+    }
+
+    public void replaceFragment(Fragment fragment, int journal_id) {
+        Bundle bundle = new Bundle();
+        bundle.putInt("user_id", Integer.parseInt(userId));
+        bundle.putInt("journal_id", journal_id);
+        fragment.setArguments(bundle);
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
         fragmentTransaction.replace(R.id.main_frameLayout, fragment).commit();
Index: app/src/main/java/co/kr/todayplay/adapter/JournalHotListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.kr.todayplay.adapter;\n\nimport android.app.Fragment;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport java.util.ArrayList;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\nimport co.kr.todayplay.MainActivity;\nimport co.kr.todayplay.R;\nimport co.kr.todayplay.fragment.Journal.JournalDetailFragment;\n\npublic class JournalHotListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n    public ArrayList<Item> data = new ArrayList<>();\n    public ArrayList<JournalTotalListViewHolder> itemController = new ArrayList<>();\n\n    public static class Item{\n        private int journal_id;\n        private String img_path;\n        private String subtitle;\n        private String title;\n\n        public Item(int journal_id, String img_path, String subtitle, String title){\n            this.journal_id = journal_id;\n            this.subtitle = subtitle;\n            this.img_path = img_path;\n            this.title = title;\n        }\n\n        public int getJournal_id() {\n            return journal_id;\n        }\n\n        public String getTitle() {\n            return title;\n        }\n\n        public String getSubtitle() {\n            return subtitle;\n        }\n\n        public String getImg_path() {\n            return img_path;\n        }\n    }\n\n    public class JournalTotalListViewHolder extends RecyclerView.ViewHolder{\n        public TextView journal_title_tv;\n        public TextView journal_subtitle_tv;\n        public ImageView imageView;\n\n        public JournalTotalListViewHolder(View itemView){\n            super(itemView);\n            journal_subtitle_tv = itemView.findViewById(R.id.journal_subtitle_tv);\n            journal_title_tv = itemView.findViewById(R.id.journal_title_tv);\n            imageView = itemView.findViewById(R.id.journal_iv);\n        }\n\n    }\n\n    public JournalHotListAdapter(ArrayList<Item> data){\n        super();\n        this.data = data;\n    }\n\n    @NonNull\n    @Override\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        LayoutInflater layoutInflater = (LayoutInflater)parent.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View view = layoutInflater.inflate(R.layout.journal_hot_item, parent, false);\n        JournalTotalListViewHolder journalTotalListViewHolder = new JournalTotalListViewHolder(view);\n        itemController.add(journalTotalListViewHolder);\n        return journalTotalListViewHolder;\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n        Item item = data.get(position);\n        JournalTotalListViewHolder itemController = (JournalTotalListViewHolder) holder;\n        itemController.journal_subtitle_tv.setText(item.getSubtitle());\n        Bitmap bm = BitmapFactory.decodeFile(item.getImg_path());\n        itemController.imageView.setImageBitmap(bm);\n        itemController.journal_title_tv.setText(item.getTitle());\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Bundle bundle = new Bundle();\n                bundle.putInt(\"journal_id\", item.getJournal_id());\n                JournalDetailFragment journalDetailFragment = new JournalDetailFragment();\n                journalDetailFragment.setArguments(bundle);\n                ((MainActivity)view.getContext()).replaceFragment(journalDetailFragment);\n            }\n        });\n    }\n\n    @Override\n    public int getItemCount() {\n        return data.size();\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/co/kr/todayplay/adapter/JournalHotListAdapter.java	(revision 02eaaa7d2cae36ea127725da4ea1691d2d05007d)
+++ app/src/main/java/co/kr/todayplay/adapter/JournalHotListAdapter.java	(date 1614675344000)
@@ -94,11 +94,8 @@
         holder.itemView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                Bundle bundle = new Bundle();
-                bundle.putInt("journal_id", item.getJournal_id());
                 JournalDetailFragment journalDetailFragment = new JournalDetailFragment();
-                journalDetailFragment.setArguments(bundle);
-                ((MainActivity)view.getContext()).replaceFragment(journalDetailFragment);
+                ((MainActivity)view.getContext()).replaceFragment(journalDetailFragment, item.getJournal_id());
             }
         });
     }
Index: app/src/main/java/co/kr/todayplay/fragment/Journal/JournalDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.kr.todayplay.fragment.Journal;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.os.Bundle;\nimport android.util.Base64;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.webkit.WebChromeClient;\nimport android.webkit.WebSettings;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.android.volley.AuthFailureError;\nimport com.android.volley.Request;\nimport com.android.volley.RequestQueue;\nimport com.android.volley.Response;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.StringRequest;\nimport com.android.volley.toolbox.Volley;\nimport com.google.android.material.appbar.AppBarLayout;\nimport com.google.android.material.appbar.CollapsingToolbarLayout;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.constraintlayout.widget.ConstraintLayout;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\nimport co.kr.todayplay.DBHelper.JournalDB.JournalDBHelper;\nimport co.kr.todayplay.JoinIdentificationActivityVer2;\nimport co.kr.todayplay.R;\nimport co.kr.todayplay.adapter.JournalRecommendListAdapter;\nimport co.kr.todayplay.adapter.PerformReviewCommentAdapter;\n\npublic class JournalDetailFragment extends Fragment {\n    AppBarLayout appBarLayout;\n    Button more_comment_btn, comment_save_btn;\n    ImageButton back_btn, bookmark_btn;\n    TextView num_bookmarks_tv, num_bookmarks_tv2, num_comment_tv, num_comment_tv2, num_view_tv, editor_tv;\n    RecyclerView comment_rv, recommend_journal_rv;\n    EditText comment_et;\n    CollapsingToolbarLayout collapsingToolbarLayout;\n    ImageView journal_banner_iv;\n    WebView webView;\n    ConstraintLayout relation_journal_container;\n\n    //journal_title, journal_editor, journal_num_of_scrap, journal_comments, journal_num_of_view, journal_file\n    JournalDBHelper journalDBHelper;\n    int journal_id;\n    int user_id = -1;\n    String journal_title;\n    String[] comments, relation_journal;\n\n    public JournalDetailFragment(){}\n\n    @SuppressLint(\"SetJavaScriptEnabled\")\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        ViewGroup viewGroup = (ViewGroup)inflater.inflate(R.layout.fragment_journal_detail, container, false);\n        journalDBHelper = new JournalDBHelper(getActivity().getApplicationContext(), \"Journal.db\", null, 1);\n        appBarLayout = (AppBarLayout) viewGroup.findViewById(R.id.app_bar);\n        back_btn = (ImageButton) viewGroup.findViewById(R.id.back_btn);\n        bookmark_btn = (ImageButton) viewGroup.findViewById(R.id.bookmark_btn);\n        more_comment_btn = (Button)viewGroup.findViewById(R.id.more_comment_btn);\n        comment_save_btn = (Button)viewGroup.findViewById(R.id.comment_btn);\n        num_bookmarks_tv = (TextView)viewGroup.findViewById(R.id.num_bookmarks_tv);\n        num_bookmarks_tv2 = (TextView)viewGroup.findViewById(R.id.num_bookmarks_tv2);\n        num_comment_tv = (TextView)viewGroup.findViewById(R.id.num_comment_tv);\n        num_comment_tv2 = (TextView)viewGroup.findViewById(R.id.num_comment);\n        num_view_tv = (TextView)viewGroup.findViewById(R.id.num_views_tv);\n        editor_tv = (TextView)viewGroup.findViewById(R.id.editor_name_tv);\n        comment_rv = (RecyclerView)viewGroup.findViewById(R.id.journal_comment_rv);\n        recommend_journal_rv = (RecyclerView)viewGroup.findViewById(R.id.recommend_journal_rv);\n        comment_et = (EditText)viewGroup.findViewById(R.id.write_comment_et);\n        journal_banner_iv = (ImageView)viewGroup.findViewById(R.id.journal_poster_iv);\n        relation_journal_container = (ConstraintLayout)viewGroup.findViewById(R.id.bottom_part);\n        comment_save_btn = (Button)viewGroup.findViewById(R.id.comment_save_btn);\n        Bundle bundle = getArguments();\n        if(bundle != null){\n            journal_id = bundle.getInt(\"journal_id\");\n            Log.d(\"Bundle result\", \"journal_id: \" + journal_id);\n        }\n        //journal_comments, relation_journal\n        journal_title = journalDBHelper.getJournalTitle(journal_id);\n        editor_tv.setText(\"by. \" + journalDBHelper.getJournalEditor(journal_id));\n        Log.d(\"JournalDetail\", \"journal_id \" + journal_id + \": journal_title = \" + journal_title + \" , journal_num_of_scrap = \" + journalDBHelper.getJournalNum_of_scrap(journal_id) + \", journal_num_of_view = \" + journalDBHelper.getJournalNum_of_view(journal_id) + \", journal_comments = \" + journalDBHelper.getJournalComments(journal_id) + \", journal_banner_img = \" + journalDBHelper.getJournalBanner_img(journal_id) + \", relation_journal = \" + journalDBHelper.getJournalRelation_journal(journal_id));\n        num_bookmarks_tv.setText(journalDBHelper.getJournalNum_of_scrap(journal_id) + \"\");\n        num_bookmarks_tv2.setText(journalDBHelper.getJournalNum_of_scrap(journal_id) + \"\");\n        num_view_tv.setText(journalDBHelper.getJournalNum_of_view(journal_id) + \"\");\n        String banner_img_path = getActivity().getApplicationContext().getFileStreamPath(journalDBHelper.getJournalBanner_img(journal_id)).toString();\n        Bitmap bm = BitmapFactory.decodeFile(banner_img_path);\n        journal_banner_iv.setImageBitmap(bm);\n        String relation_jouranl_string = journalDBHelper.getJournalRelation_journal(journal_id);\n        if(relation_jouranl_string == null){\n            Log.d(\"RelationJournalString\", \"null\");\n            relation_journal_container.setVisibility(View.GONE);\n        }\n        else{\n            relation_journal = relation_jouranl_string.split(\", \");\n            for(int i=0; i<relation_journal.length; i++){\n                Log.d(\"Relation_journal\", relation_journal[i] + \", \");\n            }\n        }\n        String comments_string = journalDBHelper.getJournalComments(journal_id);\n        if(comments_string != null){\n            comments = comments_string.split(\", \");\n            for(int i=0; i<relation_journal.length; i++){\n                Log.d(\"journal_comments\", comments[i] + \", \");\n            }\n            if (comments_string.length() <= 2){\n                more_comment_btn.setVisibility(View.GONE);\n            }\n        }\n\n        collapsingToolbarLayout = (CollapsingToolbarLayout)viewGroup.findViewById(R.id.toolbar_layout);\n        appBarLayout = (AppBarLayout)viewGroup.findViewById(R.id.app_bar);\n        appBarLayout.addOnOffsetChangedListener(new AppBarLayout.OnOffsetChangedListener() {\n            boolean isShow = true;\n            int scrollRange = -1;\n            @Override\n            public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) {\n                if(scrollRange == -1){\n                    scrollRange = appBarLayout.getTotalScrollRange();\n                }\n                if(scrollRange + verticalOffset == 0){\n                    collapsingToolbarLayout.setTitle(journal_title);\n                    isShow = true;\n                }\n                else if(isShow){\n                    collapsingToolbarLayout.setTitle(\" \");\n                    isShow = false;\n                }\n            }\n        });\n\n        webView = (WebView)viewGroup.findViewById(R.id.journal_wv);\n        if(webView == null){\n            Log.d(\"webView\", \"onCreateView: webView is null\");\n        }\n        webView.setWebChromeClient(new WebChromeClient());\n        webView.setInitialScale(1);\n        webView.getSettings().setJavaScriptEnabled(true);\n        webView.getSettings().setLoadWithOverviewMode(true);\n        webView.getSettings().setUseWideViewPort(true);\n        webView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);\n        webView.setScrollbarFadingEnabled(false);\n        webView.clearCache(true);\n        webView.clearHistory();\n\n        String file = journalDBHelper.getJournalFile(journal_id);\n        String[] file_name = file.split(\"[.]\");\n        webView.loadUrl(\"http://183.111.253.75/media/journal/\" + file_name[0] + \"/index.html\");\n\n        //Comments part\n        final ArrayList<PerformReviewCommentAdapter.CommentItem> comment_data = new ArrayList<>();\n        ArrayList<PerformReviewCommentAdapter.CommentItem> recomment_data = new ArrayList<>();\n        //recomment_data.add(new PerformReviewCommentAdapter.CommentItem(R.drawable.icon_mypage, \"제인\", \"2020.10.23\", \"꿀팁 공유 감사합니다!\\n2층에서는 샹들리에 떨어지는게 잘 안보이나요?\", true));\n        //comment_data.add(new PerformReviewCommentAdapter.CommentItem(R.drawable.icon_mypage, \"제인\", \"2020.10.23\",\"꿀팁 공유 감사합니다!\\n2층에서는 샹들리에 떨어지는게 잘 안보이나요?\", recomment_data, false));\n        //comment_data.add(new PerformReviewCommentAdapter.CommentItem(R.drawable.icon_mypage, \"제인\", \"2020.10.23\",\"꿀팁 공유 감사합니다!\\n2층에서는 샹들리에 떨어지는게 잘 안보이나요?\", false));\n        final PerformReviewCommentAdapter performReviewCommentAdapter = new PerformReviewCommentAdapter(getActivity(), comment_data);\n        comment_rv.setAdapter(performReviewCommentAdapter);\n        comment_rv.setLayoutManager(new LinearLayoutManager(getActivity(),LinearLayoutManager.VERTICAL,false));\n\n        int[] journal_comment_ids;\n        String journal_data = postGetCommentIds(Integer.toString(journal_id), new VolleyCommentCallback() {\n                    @Override\n                    public void onSuccess(String data) {\n                        Toast.makeText(getActivity().getApplicationContext(), \"Result: \" + data, Toast.LENGTH_SHORT).show();\n                        if (data.equals(\"\")) {\n                            Log.d(\"postGetCommentIds\", \"onSuccess: \" + data);\n\n                        } else {\n                            Log.d(\"postGetCommentIds\", \"POST ResultFailed.\");\n                        }\n                    }\n        });\n\n        Log.d(\"postGetCommentIds\", journal_data);\n\n        /*\n        for(int i=0; i<journal_comment_ids.length; i++){\n            String result = postGetCommentData(Integer.toString(journal_comment_ids[i]), new VolleyCommentCallback() {\n                @Override\n                public void onSuccess(String data) {\n                    Toast.makeText(getActivity().getApplicationContext(), \"Result: \" + data, Toast.LENGTH_SHORT).show();\n                    if (data.equals(\"1\")) {\n                        Log.d(\"postGetCommentData\", \"onSuccess: \" + journal_comment_ids[i] + \" = \" + data);\n\n                    } else {\n                        Log.d(\"postGetCommentData\", \"POST ResultFailed.\");\n                    }\n                }\n\n            });\n\n            Log.d(\"postSendCommentData\", result);\n        }\n*/\n\n\n        //Relation_jouranl part\n        recommend_journal_rv.setLayoutManager(new GridLayoutManager(getActivity(), 2));\n        ArrayList<JournalRecommendListAdapter.Item> recommend_journal_data = new ArrayList<>();\n        recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img03, \"모든 이야기의 시작이 된 이야기\",\"오이디푸스I\"));\n        recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img04, \"모든 이야기의 시작이 된 이야기\",\"오이디푸스I\"));\n        recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img05, \"모든 이야기의 시작이 된 이야기\",\"오이디푸스I\"));\n        recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img06, \"모든 이야기의 시작이 된 이야기\",\"오이디푸스I\"));\n        recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img05, \"모든 이야기의 시작이 된 이야기\",\"오이디푸스I\"));\n        recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img06, \"모든 이야기의 시작이 된 이야기\",\"오이디푸스I\"));\n        recommend_journal_rv.setAdapter(new JournalRecommendListAdapter(recommend_journal_data));\n\n        comment_save_btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if(comment_et.getText().equals(\"\")){\n                    Toast.makeText(getActivity().getApplicationContext(),\"댓글을 작성해 주세요.\", Toast.LENGTH_SHORT).show();\n                }\n                else{\n                    SimpleDateFormat formatter = new SimpleDateFormat( \"yyyy.MM.dd\", Locale.KOREA );\n                    Date date = Calendar.getInstance().getTime();\n                    String now_date = formatter.format (date);\n                    String result = postSendCommentData(Integer.toString(user_id), comment_et.getText().toString(), now_date, Integer.toString(journal_id), new VolleyCommentCallback() {\n                        @Override\n                        public void onSuccess(String data) {\n                            Toast.makeText(getActivity().getApplicationContext(), \"Result: \" + data, Toast.LENGTH_SHORT).show();\n                            if (data.equals(\"1\")) {\n                                comment_et.setText(\"\");\n\n                            } else {\n                                Log.d(\"postSendCommentData\", \"POST ResultFailed.\");\n                            }\n                        }\n\n                    });\n\n                    Log.d(\"postSendCommentData\", result);\n\n                    // 여기서 email 주소를 가지고 서버에서 url 요청을 합니다.\n                    // http://183.111.253.75/request_user_email_duplicate/\n                    // request POST에 email 이란 항목으로 email 주소를 보내셔야 중복 확인이 가능합니다.\n                    // 이메일 회원가입에서도 위 방식으로 중복확인해주세요\n                    // 위 요청으로 중복이 있으면 홈으로 이동\n                    // 없으면 회원가입창 이동해주시고 email 정보를 같이 보내주세요.\n                }\n            }\n        });\n        return viewGroup;\n    }\n\n    /** * Gets html content from the assets folder. */\n    private String getHtmlFromAsset() {\n        InputStream is; StringBuilder builder = new StringBuilder();\n        String htmlString = null;\n        try {\n            is = getActivity().getAssets().open(\"index.xhtml\");\n            if (is != null) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(is));\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    builder.append(line);\n                }\n                htmlString = builder.toString();\n            }\n        }\n        catch (IOException e) {\n            e.printStackTrace();\n        }\n        return htmlString;\n    } /** * Loads html page with the content. */\n\n    private void loadHtmlPage()\n    {\n        String htmlString = getHtmlFromAsset();\n        if (htmlString != null) webView.loadDataWithBaseURL(\"file:///android_asset/journal4/\", htmlString, \"text/html\", \"UTF-8\", null);\n        else Toast.makeText(getActivity(), \"html이 없습니다\", Toast.LENGTH_LONG).show();\n    }\n\n    //Comment Save\n    public String postSendCommentData(String user_id, String comment, String comment_date, String comment_source_id, VolleyCommentCallback callback){\n\n        try{\n            String[] resposeData = {\"\"};\n            RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());\n            String url = \"http://183.111.253.75/request_save_comment/\";\n\n            StringRequest stringRequest = new StringRequest(Request.Method.POST, url, new Response.Listener<String>(){\n\n                @Override\n                public void onResponse(String response) {\n\n\n                    String data = response;\n                    Log.d(\"postSendCommentData\", data);\n                    resposeData[0] = data;\n\n                    callback.onSuccess(data);\n\n\n                }\n            }, new Response.ErrorListener() {\n\n                @Override\n                public void onErrorResponse(VolleyError error) {\n                    Log.d(\"postSendCommentData\", error.toString());\n                }\n            }) {\n\n                @Override\n                protected Map<String, String> getParams() throws AuthFailureError {\n                    Map<String, String> params = new HashMap<String, String>();\n                    params.put(\"Content-Type\", \"application/json\");\n                    params.put(\"user_id\", user_id);\n                    params.put(\"comment_date\", comment_date);\n                    params.put(\"comment\", comment);\n                    params.put(\"comment_source\", \"journal\");\n                    params.put(\"comment_source_id\", comment_source_id);\n                    return params;\n                }\n            };\n            queue.add(stringRequest);\n            return resposeData[0];\n\n\n        } catch (Exception e) {\n            Log.d(\"postSendCommentData\", e.toString());\n\n        }\n        return \"0\";\n    }\n\n    //Get Comment_ids\n    public String postGetCommentIds(String journal_id, VolleyCommentCallback callback){\n\n        try{\n            String[] resposeData = {\"\"};\n            RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());\n            String url = \"http://183.111.253.75/request_journal_info_by_id/\";\n\n            StringRequest stringRequest = new StringRequest(Request.Method.POST, url, new Response.Listener<String>(){\n\n                @Override\n                public void onResponse(String response) {\n\n\n                    String data = response;\n                    Log.d(\"postGetCommentIds\", data);\n                    callback.onSuccess(data);\n\n\n                }\n            }, new Response.ErrorListener() {\n\n                @Override\n                public void onErrorResponse(VolleyError error) {\n                    Log.d(\"postGetCommentIds\", error.toString());\n                }\n            }) {\n\n                @Override\n                protected Map<String, String> getParams() throws AuthFailureError {\n                    Map<String, String> params = new HashMap<String, String>();\n                    params.put(\"Content-Type\", \"application/json\");\n                    params.put(\"journal_id\", journal_id);\n                    return params;\n                }\n            };\n            queue.add(stringRequest);\n            return resposeData[0];\n\n\n        } catch (Exception e) {\n            Log.d(\"postGetCommentIds\", e.toString());\n\n        }\n        return \"0\";\n    }\n\n    //Get Comment\n    public String postGetCommentData(String comment_id, VolleyCommentCallback callback){\n\n        try{\n            final String[] response_var = {\"\"};\n            RequestQueue queue = Volley.newRequestQueue(getContext());\n            StringRequest stringRequest = new StringRequest(Request.Method.GET, comment_id, new Response.Listener<String>(){\n\n                @Override\n                public void onResponse(String response) {\n                    callback.onSuccess(response);\n                }\n            }, new Response.ErrorListener(){\n\n                @Override\n                public void onErrorResponse(VolleyError error) {\n                    Log.d(\"postGetCommentData\", error.toString());\n                }\n            })\n            {\n\n            };\n            queue.add(stringRequest);\n            return response_var[0];\n\n\n        }catch(Exception e){\n            Log.d(\"postGetCommentData\", e.toString());\n\n        }\n        return \"\";\n    }\n\n}\ninterface VolleyCommentCallback{\n    void onSuccess(String data);\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/co/kr/todayplay/fragment/Journal/JournalDetailFragment.java	(revision 02eaaa7d2cae36ea127725da4ea1691d2d05007d)
+++ app/src/main/java/co/kr/todayplay/fragment/Journal/JournalDetailFragment.java	(date 1614675704000)
@@ -31,6 +31,10 @@
 import com.google.android.material.appbar.AppBarLayout;
 import com.google.android.material.appbar.CollapsingToolbarLayout;
 
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
@@ -75,6 +79,9 @@
     String journal_title;
     String[] comments, relation_journal;
 
+    String journalCommentIdResult;
+    JSONArray journal_commentIds_array;
+
     public JournalDetailFragment(){}
 
     @SuppressLint("SetJavaScriptEnabled")
@@ -104,8 +111,9 @@
         if(bundle != null){
             journal_id = bundle.getInt("journal_id");
             Log.d("Bundle result", "journal_id: " + journal_id);
+            //user_id = bundle.getInt("user_id");
+            //Log.d("Bundle result", "user_id: " + user_id);
         }
-        //journal_comments, relation_journal
         journal_title = journalDBHelper.getJournalTitle(journal_id);
         editor_tv.setText("by. " + journalDBHelper.getJournalEditor(journal_id));
         Log.d("JournalDetail", "journal_id " + journal_id + ": journal_title = " + journal_title + " , journal_num_of_scrap = " + journalDBHelper.getJournalNum_of_scrap(journal_id) + ", journal_num_of_view = " + journalDBHelper.getJournalNum_of_view(journal_id) + ", journal_comments = " + journalDBHelper.getJournalComments(journal_id) + ", journal_banner_img = " + journalDBHelper.getJournalBanner_img(journal_id) + ", relation_journal = " + journalDBHelper.getJournalRelation_journal(journal_id));
@@ -158,6 +166,7 @@
             }
         });
 
+        //--WebView Part--
         webView = (WebView)viewGroup.findViewById(R.id.journal_wv);
         if(webView == null){
             Log.d("webView", "onCreateView: webView is null");
@@ -176,7 +185,7 @@
         String[] file_name = file.split("[.]");
         webView.loadUrl("http://183.111.253.75/media/journal/" + file_name[0] + "/index.html");
 
-        //Comments part
+        //--Comments 로드 Part--
         final ArrayList<PerformReviewCommentAdapter.CommentItem> comment_data = new ArrayList<>();
         ArrayList<PerformReviewCommentAdapter.CommentItem> recomment_data = new ArrayList<>();
         //recomment_data.add(new PerformReviewCommentAdapter.CommentItem(R.drawable.icon_mypage, "제인", "2020.10.23", "꿀팁 공유 감사합니다!\n2층에서는 샹들리에 떨어지는게 잘 안보이나요?", true));
@@ -186,21 +195,31 @@
         comment_rv.setAdapter(performReviewCommentAdapter);
         comment_rv.setLayoutManager(new LinearLayoutManager(getActivity(),LinearLayoutManager.VERTICAL,false));
 
-        int[] journal_comment_ids;
+
         String journal_data = postGetCommentIds(Integer.toString(journal_id), new VolleyCommentCallback() {
                     @Override
                     public void onSuccess(String data) {
                         Toast.makeText(getActivity().getApplicationContext(), "Result: " + data, Toast.LENGTH_SHORT).show();
                         if (data.equals("")) {
-                            Log.d("postGetCommentIds", "onSuccess: " + data);
-
+                            Log.d("postGetCommentIds", "POST ResultFailed.");
                         } else {
-                            Log.d("postGetCommentIds", "POST ResultFailed.");
+                            Log.d("postGetCommentIds", "onSuccess: " + data);
+                            try {
+                                journalCommentIdResult = new JSONObject(data).getJSONObject("journal").getString("journal_comments").toString();
+                                Log.d("journalIdResultObj", journalCommentIdResult);
+                                //journal_commentIds_array = new JSONArray(journalIdResult_object.getJSONArray("journal_comments"));
+                                //for(int i = 0; i< journal_commentIds_array.length(); i++){
+                                  //  Log.d("journal_commentIds", journal_commentIds_array.get(i).toString());
+                                //}
+                            } catch (JSONException e) {
+                                e.printStackTrace();
+                            }
                         }
                     }
         });
 
-        Log.d("postGetCommentIds", journal_data);
+        Log.d("journal_data", journal_data);
+
 
         /*
         for(int i=0; i<journal_comment_ids.length; i++){
@@ -234,6 +253,7 @@
         recommend_journal_data.add(new JournalRecommendListAdapter.Item(R.drawable.editor_journal_img06, "모든 이야기의 시작이 된 이야기","오이디푸스I"));
         recommend_journal_rv.setAdapter(new JournalRecommendListAdapter(recommend_journal_data));
 
+        //--댓글 저장 Part--
         comment_save_btn.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -272,7 +292,7 @@
         return viewGroup;
     }
 
-    /** * Gets html content from the assets folder. */
+    /*
     private String getHtmlFromAsset() {
         InputStream is; StringBuilder builder = new StringBuilder();
         String htmlString = null;
@@ -291,7 +311,7 @@
             e.printStackTrace();
         }
         return htmlString;
-    } /** * Loads html page with the content. */
+    }
 
     private void loadHtmlPage()
     {
@@ -299,6 +319,7 @@
         if (htmlString != null) webView.loadDataWithBaseURL("file:///android_asset/journal4/", htmlString, "text/html", "UTF-8", null);
         else Toast.makeText(getActivity(), "html이 없습니다", Toast.LENGTH_LONG).show();
     }
+    */
 
     //Comment Save
     public String postSendCommentData(String user_id, String comment, String comment_date, String comment_source_id, VolleyCommentCallback callback){
@@ -365,13 +386,9 @@
 
                 @Override
                 public void onResponse(String response) {
-
-
                     String data = response;
                     Log.d("postGetCommentIds", data);
                     callback.onSuccess(data);
-
-
                 }
             }, new Response.ErrorListener() {
 
@@ -392,7 +409,6 @@
             queue.add(stringRequest);
             return resposeData[0];
 
-
         } catch (Exception e) {
             Log.d("postGetCommentIds", e.toString());
 
